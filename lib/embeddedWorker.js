/**
 * embeddedWorker.js contains an embedded version of worker.js.
 * This file is automatically generated,
 * changes made in this file will be overwritten.
 */
module.exports = "function isPromise(e){return e&&\"function\"==typeof e.then&&\"function\"==typeof e.catch}var worker={};if(\"undefined\"!=typeof process)worker.on=process.on.bind(process),worker.send=process.send.bind(process);else{if(\"function\"!=typeof postMessage||\"function\"!=typeof addEventListener)throw new Error(\"Script must be executed as a worker\");worker.on=function(e,r){addEventListener(e,function(e){r(e.data)})},worker.send=function(e){postMessage(e)}}worker.on(\"message\",function(request){try{switch(request.method){case\"run\":var fn=eval(\"(\"+request.params.fn+\")\"),args=request.params.args,result=fn.apply(fn,args);isPromise(result)?result.then(function(e){worker.send({id:request.id,result:e,error:null})}).catch(function(e){worker.send({id:request.id,result:null,error:e.toString()})}):worker.send({id:request.id,result:result,error:null});break;default:throw new Error('Unknown method \"'+request.method+'\"')}}catch(err){worker.send({id:request.id,result:null,error:err.toString()})}});";
